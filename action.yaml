name: 'String Summary'
description: 'Reads and summarizes a string input, truncates if too long, and writes to GitHub summary.'

inputs:
  path:
    description: 'The path to the file containing text to be summarized.'
    required: false
  string:
    description: 'The input string to be summarized.'
    required: false
  max_size:
    description: 'Maximum size for the output in bytes. 1MB is the default limit for Github Job summaries.'
    required: false
    default: '1048576'
  summary_header:
    description: 'The header for the summary output.'
    required: false
    default: 'Summary'
  data_type:
    description: 'The type of data to be assigned to markdown code block.'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Validate Inputs
      shell: bash
      env:
        INPUT_STRING: ${{ inputs.string }}
        INPUT_PATH: ${{ inputs.path }}
      run: |
        if [[ (-z "$INPUT_STRING" && -z "$INPUT_PATH" ) || (-n "$INPUT_STRING" && -n "$INPUT_PATH" ) ]]; then
          echo "Error: Provide either string or path, but not both."
          exit 1
        fi

    - name: Process and Publish String Summary
      shell: bash
      env:
        MAX_SIZE: ${{ inputs.max_size }}
        SUMMARY_HEADER: ${{ inputs.summary_header }}
        DATA_TYPE: ${{ inputs.data_type }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_STRING: ${{ inputs.string }}
      run: |
        if [[ -n "$INPUT_PATH" ]]; then
          if [[ ! -f "$INPUT_PATH" ]]; then
            echo "Error: Input file ${INPUT_PATH} not found."
            exit 1
          fi
          INPUT_DATA=$(cat "$INPUT_PATH")
        else
          INPUT_DATA="$INPUT_STRING"
        fi

        FILE_SIZE=${#INPUT_DATA}

        if [ "$FILE_SIZE" -gt "$MAX_SIZE" ]; then
          echo ":warning: String content is too long to be displayed (${FILE_SIZE} chars) after filtering. It exceeds the ${MAX_SIZE} byte limit."
          echo ":warning: Skipping content display due to size."
          exit 0
        fi

        {
          echo "## $SUMMARY_HEADER"
          echo "<details><summary>Click to expand</summary>"
          echo ""
          echo '```'${DATA_TYPE}
          echo "$INPUT_DATA"
          echo '```'
          echo "</details>"
        } >> $GITHUB_STEP_SUMMARY
